// pm2_monitor.js
const pm2 = require('pm2');
require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const { sendTelegramMessage } = require('./telegram'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram

// –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ process.env
const PM2_APP_NAME = process.env.PM2_APP_NAME;
const CPU_THRESHOLD_PERCENT = parseInt(process.env.CPU_THRESHOLD_PERCENT, 10);
const MEMORY_THRESHOLD_MB = parseInt(process.env.MEMORY_THRESHOLD_MB, 10);
const CHAT_ID = process.env.CHAT_ID; // Chat ID –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö PM2

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram.
 * @param {string} chatId - ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
 */
async function checkPm2AppStatus(chatId) {
    pm2.list(async (err, list) => {
        if (err) {
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ PM2: ${err.message}`);
            console.error('Error listing PM2 processes for status check:', err.message);
            return;
        }

        const app = list.find(p => p.name === PM2_APP_NAME); // –ù–∞—Ö–æ–¥–∏–º –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏

        if (app) {
            let statusMessage = `üìä –°—Ç–∞—Ç—É—Å *${PM2_APP_NAME}*:\n`;
            statusMessage += `   –°—Ç–∞—Ç—É—Å: \`${app.pm2_env.status}\`\n`;
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º uptime –≤ –º–∏–Ω—É—Ç–∞—Ö
            statusMessage += `   Uptime: ${app.pm2_env.pm_uptime ? (Math.round((Date.now() - app.pm2_env.pm_uptime) / 1000 / 60)) + ' –º–∏–Ω' : 'N/A'}\n`;
            statusMessage += `   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤: \`${app.pm2_env.restart_time}\`\n`;
            statusMessage += `   –ü–∞–º—è—Ç—å: \`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`\n`;
            statusMessage += `   CPU: \`${app.monit.cpu}%\`\n`;

            // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ—Ä–æ–≥–∏ –ø—Ä–µ–≤—ã—à–µ–Ω—ã
            if (app.monit.cpu > CPU_THRESHOLD_PERCENT) {
                statusMessage += `   ‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* CPU (\`${app.monit.cpu}%\`) –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞ ${CPU_THRESHOLD_PERCENT}%\n`;
            }
            if ((app.monit.memory / 1024 / 1024) > MEMORY_THRESHOLD_MB) {
                statusMessage += `   ‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* –ü–∞–º—è—Ç—å (\`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`) –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞ ${MEMORY_THRESHOLD_MB} MB\n`;
            }

            await sendTelegramMessage(chatId, statusMessage);
        } else {
            await sendTelegramMessage(chatId, `–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ *${PM2_APP_NAME}* –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ PM2.`);
        }
    });
}

/**
 * –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
 * @param {string} chatId - ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
 */
async function restartPm2App(chatId) {
    await sendTelegramMessage(chatId, `–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ *${PM2_APP_NAME}*...`);

    pm2.restart(PM2_APP_NAME, async (err) => {
        if (err) {
            console.error(`Error restarting ${PM2_APP_NAME}:`, err.message);
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ *${PM2_APP_NAME}*: ${err.message}`);
            return;
        }
        await sendTelegramMessage(chatId, `üü¢ *${PM2_APP_NAME}* —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–æ—à–µ–Ω –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.`);
    });
}

/**
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
 * @param {string} chatId - ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
 */
async function stopPm2App(chatId) {
    pm2.list(async (err, list) => {
        if (err) {
            console.error(`Error listing PM2 processes for stop check:`, err.message);
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ PM2 –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ${err.message}`);
            return;
        }

        const app = list.find(p => p.name === PM2_APP_NAME);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        if (!app || app.pm2_env.status === 'stopped' || app.pm2_env.status === 'stopped_waiting') {
            await sendTelegramMessage(chatId, `‚ÑπÔ∏è –°–µ—Ä–≤–µ—Ä *${PM2_APP_NAME}* —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω.`);
            return;
        }

        await sendTelegramMessage(chatId, `–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É *${PM2_APP_NAME}*...`);

        pm2.stop(PM2_APP_NAME, async (err) => {
            if (err) {
                console.error(`Error stopping ${PM2_APP_NAME}:`, err.message);
                await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ *${PM2_APP_NAME}*: ${err.message}`);
                return;
            }
            await sendTelegramMessage(chatId, `‚ö´Ô∏è *${PM2_APP_NAME}* —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–æ—à–µ–Ω –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É.`);
        });
    });
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
 * @param {string} chatId - ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
 */
async function startPm2App(chatId) {
    pm2.list(async (err, list) => {
        if (err) {
            console.error(`Error listing PM2 processes for start check:`, err.message);
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ PM2 –¥–ª—è –∑–∞–ø—É—Å–∫–∞: ${err.message}`);
            return;
        }

        const app = list.find(p => p.name === PM2_APP_NAME);

        if (app && app.pm2_env.status === 'online') {
            await sendTelegramMessage(chatId, `‚ÑπÔ∏è –°–µ—Ä–≤–µ—Ä *${PM2_APP_NAME}* —É–∂–µ –∑–∞–ø—É—â–µ–Ω.`);
            return;
        }

        await sendTelegramMessage(chatId, `–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ *${PM2_APP_NAME}*...`);

        pm2.start(PM2_APP_NAME, async (err) => {
            if (err) {
                console.error(`Error starting ${PM2_APP_NAME}:`, err.message);
                await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ *${PM2_APP_NAME}*: ${err.message}`);
                return;
            }
            await sendTelegramMessage(chatId, `üü¢ *${PM2_APP_NAME}* —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–æ—à–µ–Ω –Ω–∞ –∑–∞–ø—É—Å–∫.`);
        });
    });
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram.
 * @param {string} chatId - ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
 */
async function listAllPm2Apps(chatId) {
    await sendTelegramMessage(chatId, '–ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π PM2...');

    pm2.list(async (err, list) => {
        if (err) {
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π PM2: ${err.message}`);
            console.error('Error listing all PM2 processes:', err.message);
            return;
        }

        if (list.length === 0) {
            await sendTelegramMessage(chatId, '–í PM2 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.');
            return;
        }

        let message = 'üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π PM2:\n\n';
        list.forEach(app => {
            let statusEmoji = '';
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
            switch (app.pm2_env.status) {
                case 'online':
                    statusEmoji = 'üü¢ '; // –ó–µ–ª–µ–Ω—ã–π –∫—Ä—É–∂–æ–∫ –¥–ª—è "online"
                    break;
                case 'stopped':
                    statusEmoji = '‚ö´Ô∏è '; // –ß–µ—Ä–Ω—ã–π –∫—Ä—É–∂–æ–∫ –¥–ª—è "stopped"
                    break;
                case 'errored':
                    statusEmoji = 'üî¥ '; // –ö—Ä–∞—Å–Ω—ã–π –∫—Ä—É–∂–æ–∫ –¥–ª—è –æ—à–∏–±–æ–∫
                    break;
                case 'launching':
                    statusEmoji = 'üü° '; // –ñ–µ–ª—Ç—ã–π –∫—Ä—É–∂–æ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
                    break;
                default:
                    statusEmoji = '‚ö™Ô∏è '; // –ë–µ–ª—ã–π –∫—Ä—É–∂–æ–∫ –¥–ª—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
            }

            message += `*–ò–º—è:* \`${app.name}\`\n`;
            message += `   *ID:* \`${app.pm_id}\`\n`;
            message += `   *–°—Ç–∞—Ç—É—Å:* ${statusEmoji}\`${app.pm2_env.status}\`\n`; // –î–æ–±–∞–≤–∏–ª–∏ —ç–º–æ–¥–∑–∏ —Å—é–¥–∞
            message += `   *Uptime:* ${app.pm2_env.pm_uptime ? (Math.round((Date.now() - app.pm2_env.pm_uptime) / 1000 / 60)) + ' –º–∏–Ω' : 'N/A'}\n`;
            message += `   *–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤:* \`${app.pm2_env.restart_time}\`\n`;
            message += `   *–ü–∞–º—è—Ç—å:* \`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`\n`;
            message += `   *CPU:* \`${app.monit.cpu}%\`\n`;
            message += `\n`;
        });

        await sendTelegramMessage(chatId, message);
    });
}

/**
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –¥–µ–º–æ–Ω—É PM2 –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è.
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 */
function connectAndListenPm2Events() {
    pm2.connect(function (err) {
        if (err) {
            console.error('Error connecting to PM2:', err.message);
            sendTelegramMessage(CHAT_ID, `üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∫ PM2: ${err.message}`, true);
            return;
        }
        console.log('Connected to PM2 daemon.');

        pm2.launchBus(function (err, bus) {
            if (err) {
                console.error('Error launching PM2 bus:', err.message);
                sendTelegramMessage(CHAT_ID, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π PM2: ${err.message}`, true);
                return;
            }

            bus.on('process:event', function (data) {
                // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—à–µ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                if (data.process.name === PM2_APP_NAME) {
                    let message = `üìä PM2 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è *${PM2_APP_NAME}*: \n`;
                    switch (data.event) {
                        case 'stop':
                            message += `üî¥ *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –û–°–¢–ê–ù–û–í–õ–ï–ù–û!* (Status: \`${data.process.status}\`)`;
                            break;
                        case 'restart':
                            message += `üü° *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ü–ï–†–ï–ó–ê–ü–£–©–ï–ù–û!* (Status: \`${data.process.status}\`)`;
                            break;
                        case 'exit':
                            message += `üíî *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –í–´–®–õ–û –ò–ó –°–¢–†–û–Ø!* (Status: \`${data.process.status}\`)`;
                            break;
                        case 'online':
                            message += `‚úÖ *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ó–ê–ü–£–©–ï–ù–û –ò –†–ê–ë–û–¢–ê–ï–¢!* (Status: \`${data.process.status}\`)`;
                            break;
                        default:
                            message += `‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: \`${data.event}\` (Status: \`${data.process.status}\`)`;
                            break;
                    }
                    sendTelegramMessage(CHAT_ID, message, true); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                }
            });
        });
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ index.js
module.exports = {
    checkPm2AppStatus,
    restartPm2App,
    stopPm2App,
    startPm2App,
    listAllPm2Apps,
    connectAndListenPm2Events
};
