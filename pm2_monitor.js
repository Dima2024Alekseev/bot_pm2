const pm2 = require('pm2');
require('dotenv').config();
const { sendTelegramMessage } = require('./telegram');

const PM2_APP_NAME = process.env.PM2_APP_NAME;
const CPU_THRESHOLD_PERCENT = parseInt(process.env.CPU_THRESHOLD_PERCENT, 10);
const MEMORY_THRESHOLD_MB = parseInt(process.env.MEMORY_THRESHOLD_MB, 10);
const CHAT_ID = process.env.CHAT_ID;

async function checkPm2AppStatus(chatId) {
    pm2.list(async (err, list) => {
        if (err) {
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ PM2: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
            console.error('Error listing PM2 processes for status check:', err.message);
            return;
        }

        const app = list.find(p => p.name === PM2_APP_NAME);

        if (app) {
            let statusMessage = `üìä –°—Ç–∞—Ç—É—Å *${PM2_APP_NAME}*:\n`;
            statusMessage += ` ¬† –°—Ç–∞—Ç—É—Å: \`${app.pm2_env.status}\`\n`;
            statusMessage += ` ¬† Uptime: ${app.pm2_env.pm_uptime ? (Math.round((Date.now() - app.pm2_env.pm_uptime) / 1000 / 60)) + ' –º–∏–Ω' : 'N/A'}\n`;
            statusMessage += ` ¬† –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤: \`${app.pm2_env.restart_time}\`\n`;
            statusMessage += ` ¬† –ü–∞–º—è—Ç—å: \`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`\n`;
            statusMessage += ` ¬† CPU: \`${app.monit.cpu}%\`\n`;

            if (app.monit.cpu > CPU_THRESHOLD_PERCENT) {
                statusMessage += ` ¬† ‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* CPU (\`${app.monit.cpu}%\`) –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞ ${CPU_THRESHOLD_PERCENT}%\n`;
            }
            if ((app.monit.memory / 1024 / 1024) > MEMORY_THRESHOLD_MB) {
                statusMessage += ` ¬† ‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* –ü–∞–º—è—Ç—å (\`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`) –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞ ${MEMORY_THRESHOLD_MB} MB\n`;
            }

            await sendTelegramMessage(chatId, statusMessage, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
        } else {
            await sendTelegramMessage(chatId, `–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ *${PM2_APP_NAME}* –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ PM2.`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
        }
    });
}

async function restartPm2App(chatId) {
    await sendTelegramMessage(chatId, `–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ *${PM2_APP_NAME}*...`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2

    pm2.restart(PM2_APP_NAME, async (err) => {
        if (err) {
            console.error(`Error restarting ${PM2_APP_NAME}:`, err.message);
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ *${PM2_APP_NAME}*: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
            return;
        }
        await sendTelegramMessage(chatId, `üü¢ *${PM2_APP_NAME}* —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–æ—à–µ–Ω –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
    });
}

async function stopPm2App(chatId) {
    await sendTelegramMessage(chatId, `–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É *${PM2_APP_NAME}*...`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2

    pm2.stop(PM2_APP_NAME, async (err) => {
        if (err) {
            console.error(`Error stopping ${PM2_APP_NAME}:`, err.message);
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ *${PM2_APP_NAME}*: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
            return;
        }
        await sendTelegramMessage(chatId, `‚ö´Ô∏è *${PM2_APP_NAME}* —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–æ—à–µ–Ω –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É.`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
    });
}

async function startPm2App(chatId) {
    await sendTelegramMessage(chatId, `–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ *${PM2_APP_NAME}*...`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2

    pm2.start(PM2_APP_NAME, async (err) => {
        if (err) {
            console.error(`Error starting ${PM2_APP_NAME}:`, err.message);
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ *${PM2_APP_NAME}*: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
            return;
        }
        await sendTelegramMessage(chatId, `üü¢ *${PM2_APP_NAME}* —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–æ—à–µ–Ω –Ω–∞ –∑–∞–ø—É—Å–∫.`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
    });
}

async function listAllPm2Apps(chatId) {
    await sendTelegramMessage(chatId, '–ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π PM2...', true); // –ó–¥–µ—Å—å MarkdownV2 –Ω–µ –Ω—É–∂–µ–Ω

    pm2.list(async (err, list) => {
        if (err) {
            await sendTelegramMessage(chatId, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π PM2: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
            console.error('Error listing all PM2 processes:', err.message);
            return;
        }

        if (list.length === 0) {
            await sendTelegramMessage(chatId, '–í PM2 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.', true); // –ó–¥–µ—Å—å MarkdownV2 –Ω–µ –Ω—É–∂–µ–Ω
            return;
        }

        let message = 'üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π PM2:\n\n';
        list.forEach(app => {
            // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –¥–ª—è MarkdownV2 –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —á–∞—Å—Ç—å—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            // –ù–∞–ø—Ä–∏–º–µ—Ä, `app.name` –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å.
            // –ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Å–ø–æ—Å–æ–±: –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—ç–∫-—Ç–∏–∫–∏ –≤–æ–∫—Ä—É–≥ app.name –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –∫–∞–∫ –∫–æ–¥–±–ª–æ–∫.
            // –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ app.name –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.
            // –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ app.name –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç —Å MarkdownV2.
            message += `*–ò–º—è:* \`${app.name}\`\n`; // name –≤ –±—ç–∫-—Ç–∏–∫–∞—Ö
            message += ` ¬†*ID:* \`${app.pm_id}\`\n`;
            message += ` ¬†*–°—Ç–∞—Ç—É—Å:* \`${app.pm2_env.status}\`\n`;
            message += ` ¬†*Uptime:* ${app.pm2_env.pm_uptime ? (Math.round((Date.now() - app.pm2_env.pm_uptime) / 1000 / 60)) + ' –º–∏–Ω' : 'N/A'}\n`;
            message += ` ¬†*–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤:* \`${app.pm2_env.restart_time}\`\n`;
            message += ` ¬†*–ü–∞–º—è—Ç—å:* \`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`\n`;
            message += ` ¬†*CPU:* \`${app.monit.cpu}%\`\n`;
            message += `\n`;
        });

        await sendTelegramMessage(chatId, message, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
    });
}

function connectAndListenPm2Events() {
    pm2.connect(function (err) {
        if (err) {
            console.error('Error connecting to PM2:', err.message);
            sendTelegramMessage(CHAT_ID, `üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∫ PM2: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
            return;
        }
        console.log('Connected to PM2 daemon.');

        pm2.launchBus(function (err, bus) {
            if (err) {
                console.error('Error launching PM2 bus:', err.message);
                sendTelegramMessage(CHAT_ID, `üî¥ –û—à–∏–±–∫–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π PM2: ${err.message}`, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
                return;
            }

            bus.on('process:event', function (data) {
                if (data.process.name === PM2_APP_NAME) {
                    let message = `üìä PM2 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è *${PM2_APP_NAME}*: \n`;
                    switch (data.event) {
                        case 'stop':
                            message += `üî¥ *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –û–°–¢–ê–ù–û–í–õ–ï–ù–û!* (Status: \`${data.process.status}\`)`;
                            break;
                        case 'restart':
                            message += `üü° *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ü–ï–†–ï–ó–ê–ü–£–©–ï–ù–û!* (Status: \`${data.process.status}\`)`;
                            break;
                        case 'exit':
                            message += `üíî *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –í–´–®–õ–û –ò–ó –°–¢–†–û–Ø!* (Status: \`${data.process.status}\`)`;
                            break;
                        case 'online':
                            message += `üü¢ *–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ó–ê–ü–£–©–ï–ù–û –ò –†–ê–ë–û–¢–ê–ï–¢!* (Status: \`${data.process.status}\`)`;
                            break;
                        default:
                            message += `‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: \`${data.event}\` (Status: \`${data.process.status}\`)`;
                            break;
                    }
                    sendTelegramMessage(CHAT_ID, message, true, { parse_mode: 'MarkdownV2' }); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º MarkdownV2
                }
            });
        });
    });
}

module.exports = {
    checkPm2AppStatus,
    restartPm2App,
    stopPm2App,
    startPm2App,
    listAllPm2Apps,
    connectAndListenPm2Events
};