const nodeDiskInfo = require('node-disk-info'); // –ò–ó–ú–ï–ù–ï–ù–û: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –º–æ–¥—É–ª—å
const pm2 = require('pm2'); // –ù—É–∂–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ CPU/–ø–∞–º—è—Ç–∏ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const { sendTelegramMessage } = require('./telegram'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

// –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ process.env –∏ –ø–∞—Ä—Å–∏–º —á–∏—Å–ª–∞
const DISK_SPACE_THRESHOLD_PERCENT = parseInt(process.env.DISK_SPACE_THRESHOLD_PERCENT, 10);
const CPU_THRESHOLD_PERCENT = parseInt(process.env.CPU_THRESHOLD_PERCENT, 10);
const MEMORY_THRESHOLD_MB = parseInt(process.env.MEMORY_THRESHOLD_MB, 10);
const PM2_APP_NAME = process.env.PM2_APP_NAME;
const CHAT_ID = process.env.CHAT_ID; // Chat ID –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã (–¥–∏—Å–∫, CPU, –ø–∞–º—è—Ç—å PM2).
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã.
 */
async function checkSystemHealth() {
    console.log('Performing scheduled system health check...');
    let healthMessage = 'ü©∫ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã:\n';
    let alertCount = 0; // –°—á–µ—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º

    // --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ ---
    try {
        const drives = await nodeDiskInfo.getDrives(); // –ò–ó–ú–ï–ù–ï–ù–û: –≤—ã–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ nodeDiskInfo
        let diskInfo = '';
        drives.forEach(drive => {
            const usedPercent = (drive.used / drive.total * 100).toFixed(2);
            const freePercent = (drive.available / drive.total * 100).toFixed(2);
            diskInfo += ` ¬†–î–∏—Å–∫ *${drive.mounted}*:\n`;
            diskInfo += ` ¬† ¬†–í—Å–µ–≥–æ: \`${(drive.total / (1024 ** 3)).toFixed(2)} GB\`\n`;
            diskInfo += ` ¬† ¬†–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: \`${(drive.used / (1024 ** 3)).toFixed(2)} GB\` (\`${usedPercent}%\`)\n`;
            diskInfo += ` ¬† ¬†–°–≤–æ–±–æ–¥–Ω–æ: \`${(drive.available / (1024 ** 3)).toFixed(2)} GB\` (\`${freePercent}%\`)\n`;

            if (parseFloat(freePercent) < DISK_SPACE_THRESHOLD_PERCENT) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —á–∏—Å–ª–∞
                healthMessage += `üö® *–í–Ω–∏–º–∞–Ω–∏–µ:* –ù–∏–∑–∫–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ *${drive.mounted}*: \`${freePercent}%\` —Å–≤–æ–±–æ–¥–Ω–æ (–Ω–∏–∂–µ \`${DISK_SPACE_THRESHOLD_PERCENT}%\`)\n`;
                alertCount++;
            }
        });
        healthMessage += `\nüíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Å–∫–∞—Ö:\n${diskInfo}`;
    } catch (e) {
        healthMessage += `üî¥ *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∏—Å–∫–∞—Ö:* ${e.message}\n`;
        console.error('Error getting disk info:', e);
        alertCount++;
    }

    // --- –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU –∏ –ø–∞–º—è—Ç–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
    pm2.list(async (err, list) => {
        if (err) {
            healthMessage += `üî¥ *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:* ${err.message}\n`;
            console.error('Error listing PM2 processes for health check:', err.message);
            alertCount++;
            await sendTelegramMessage(CHAT_ID, healthMessage, true); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ PM2
            return;
        }

        const app = list.find(p => p.name === PM2_APP_NAME);
        if (app) {
            healthMessage += `\nüìà –°–æ—Å—Ç–æ—è–Ω–∏–µ *${PM2_APP_NAME}*:\n`;
            healthMessage += ` ¬†CPU: \`${app.monit.cpu}%\`\n`;
            healthMessage += ` ¬†–ü–∞–º—è—Ç—å: \`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`\n`;

            if (app.monit.cpu > CPU_THRESHOLD_PERCENT) {
                healthMessage += `üö® *–í–Ω–∏–º–∞–Ω–∏–µ:* CPU (\`${app.monit.cpu}%\`) –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞ \`${CPU_THRESHOLD_PERCENT}%\`\n`;
                alertCount++;
            }
            if ((app.monit.memory / 1024 / 1024) > MEMORY_THRESHOLD_MB) {
                healthMessage += `üö® *–í–Ω–∏–º–∞–Ω–∏–µ:* –ü–∞–º—è—Ç—å (\`${(app.monit.memory / 1024 / 1024).toFixed(2)} MB\`) –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞ \`${MEMORY_THRESHOLD_MB} MB\`\n`;
                alertCount++;
            }
        } else {
            healthMessage += `\n–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ *${PM2_APP_NAME}* –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ PM2 –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CPU/–ø–∞–º—è—Ç–∏.\n`;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã
        if (alertCount > 0) {
            await sendTelegramMessage(CHAT_ID, healthMessage, true);
        } else {
            console.log('System health check passed without alerts.');
        }
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ index.js
module.exports = {
    checkSystemHealth
};